import {
    isMusicPlaying, isSameTextChannel, isSameVoiceChannel, isUserInTheVoiceChannel
} from "@zuikaku/Decorators";
import { ZuikakuCommand<ICommandComponent> } from "@zuikaku/Decorators/ZuikakuCommand<ICommandComponent>";
import { ZuikakuCommand } from "@zuikaku/Structures/ZuikakuCommand";
import { CommandContext } from "@zuikaku/Structures/CommandContext";
import { createEmbed } from "@zuikaku/Utils";

@ZuikakuDecorator<ICommandComponent>({
    name: "bound",
    description: "Update Player",
    usage: "bound <textChannel>",
    clientPermissions: ["SEND_MESSAGES", "EMBED_LINKS"],
    slash: {
        options: [
            {
                name: "TextChannel",
                description: "Update TextChannel Player"
            }
        ]
    }
})
export default class PauseCommand extends ZuikakuCommand {
    @isMusicPlaying()
    @isUserInTheVoiceChannel()
    @isSameVoiceChannel()
    public async execute(ctx: CommandContext): Promise<any> {
        const fromGuildPlayer = ctx.guild?.settings.guildPlayer?.channelId === ctx.channel?.id;
        if (fromGuildPlayer) return;

        const queue = ctx.guild?.queue;
        const channel = ctx.mentions?.channels.last() ?? ctx.guild?.channels.cache.get(ctx.args[0]);
        if (!channel) return;
        queue?.textChannel = channel
    }
}
