import { ZuikakuDecorator } from "@zuikaku/Handlers";
import { ZuikakuCommand } from "@zuikaku/Structures/ZuikakuCommand";
import { ICommandComponent } from "@zuikaku/types";
import { CommandContext } from "@zuikaku/Structures/CommandContext";
import { createEmbed } from "@zuikaku/Utils";
import { TextChannel } from "discord.js";

@ZuikakuDecorator<ICommandComponent>({
    name: "clear",
    description: "Clear message",
    usage: "clear <number>",
    clientPermissions: ["SEND_MESSAGES", "EMBED_LINKS", "MANAGE_MESSAGES"],
    userPermissions: ["MANAGE_MESSAGES"]
})
export default class ClearCommand extends ZuikakuCommand {
    public async execute(ctx: CommandContext): Promise<any> {
        if (isNaN(Number(ctx.args[0]))) {
            return ctx.send({
                embeds: [
                    createEmbed(
                        "error",
                        "<a:decline:879311910045097984> | Operation Canceled. Please input the correct number"
                    )
                ]
            }).then(x => {
                if (x.deletable) {
                    void setTimeout(() => x.delete().catch(() => null), 10000);
                }
            }).catch(() => null);
        }
        if (Number(ctx.args[0]) > 100) {
            return ctx.send({
                embeds: [
                    createEmbed(
                        "error",
                        "<a:decline:879311910045097984> | Operation Canceled. I can't delete message over than 100 messages"
                    )
                ]
            }).then(x => {
                if (x.deletable) {
                    void setTimeout(() => x.delete().catch(() => null), 10000);
                }
            }).catch(() => null);
        }
        if (Number(ctx.args[0]) < 1) return;

        await (ctx.channel as TextChannel).bulkDelete(Number(ctx.args[0]), true);
    }
}
