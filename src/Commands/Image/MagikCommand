import { ZuikakuCommand<ICommandComponent> } from "@zuikaku/Decorators/ZuikakuCommand<ICommandComponent>";
import { ZuikakuCommand } from "@zuikaku/Structures/ZuikakuCommand";
import { CommandContext } from "@zuikaku/Structures/CommandContext";
import { createEmbed } from "@zuikaku/Utils";
import alex from "alexflipnote.js";
import { MessageAttachment } from "discord.js";

@ZuikakuDecorator<ICommandComponent>({
    name: "magik",
    description: "Add magik filter to image",
    usage: "magik [user|image|^]",
    clientPermissions: ["SEND_MESSAGES", "EMBED_LINKS"],
    slash: {
        options: [
            {
                name: "image",
                type: "STRING",
                description: "User, Emoji, or Image",
                required: false
            }
        ]
    }
})
export default class MagikCommand extends ZuikakuCommand {
    public async execute(ctx: CommandContext): Promise<any> {
        if (ctx.isInteraction() && !ctx.deferred) await ctx.deferReply();

        const { image } = new alex(this.client.config.alexapi);
        const parse = await this.client.utils.parseMsg(ctx, ctx.options?.getString("image") ?? undefined);
        const img = await image.magik({ image: parse });
        const ath = new MessageAttachment(img, "magik.png");
        const e = createEmbed("info")
            .setImage("attachment://magik.png")
            .setTimestamp()
            .setFooter(`Commanded by ${ctx.author.tag}`, ctx.author.avatarURL({ dynamic: true, size: 4096 }) as string);
        await ctx.send({ embeds: [e], files: [ath], deleteButton: { reference: ctx.author.id } });
    }
}
